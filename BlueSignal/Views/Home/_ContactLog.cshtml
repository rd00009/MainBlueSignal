
@model BlueSignal.Models.ContactViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="ticket_form">
        <h3>Open a Ticket</h3>
        @{
            if (Model.IsSuccess == 1)
            {

                <div class="alert alert-danger alert-dismissible" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <strong>Error!</strong> Please fill the required fields.
                </div>
            }

            if (Model.IsSuccess == 2)
            {

                <div class="alert alert-success alert-dismissible" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <strong>Warning!</strong> Thank for contacting us, we will response soon.
                </div>
            }
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        }
        <div class="form-group row">
            <div class="col-sm-6">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", maxlength = 150 } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-6">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", maxlength = 150 } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">

            <div class="col-sm-12">
                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", maxlength = 200 } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-sm-12">
                @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                @*<textarea class="form-control"></textarea>*@
                @Html.TextAreaFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", maxlength = 1000 } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-sm-12">
                <input type="button" onclick="AddContact();" class="btn btn-primary pull-right" value="Send Message" />

            </div>
        </div>
    </div>


}
